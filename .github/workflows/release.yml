name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write
  packages: write
  actions: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{ steps.version.outputs.version }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm run test:ci
      
    - name: Build production
      run: npm run build:prod
      
    - name: Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ steps.version.outputs.version }}
        path: dist/
        retention-days: 30

  create-release:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-${{ needs.build-and-test.outputs.version }}
        path: dist/
        
    - name: Create release archive
      run: |
        cd dist
        tar -czf ../componenttesting-ex-${{ needs.build-and-test.outputs.version }}.tar.gz .
        cd ..
        
    - name: Generate changelog
      id: changelog
      run: |
        if [ -f "CHANGELOG.md" ]; then
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          head -20 CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "changelog=Release ${{ needs.build-and-test.outputs.version }}" >> $GITHUB_OUTPUT
        fi
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.build-and-test.outputs.version }}
        name: Release ${{ needs.build-and-test.outputs.version }}
        body: |
          ## Release ${{ needs.build-and-test.outputs.version }}
          
          ${{ steps.changelog.outputs.changelog }}
          
          ### ðŸ“¦ Assets
          - `componenttesting-ex-${{ needs.build-and-test.outputs.version }}.tar.gz` - Production build archive
          
          ### ðŸš€ Deployment
          This release has been automatically deployed to GitHub Pages.
          
          ---
          *This release was automatically created by GitHub Actions.*
        files: |
          componenttesting-ex-${{ needs.build-and-test.outputs.version }}.tar.gz
        draft: false
        prerelease: ${{ contains(needs.build-and-test.outputs.version, '-') }}

  deploy-to-pages:
    runs-on: ubuntu-latest
    needs: [build-and-test, create-release]
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for GitHub Pages
      run: npm run build:prod
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload to Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist/componenttesting_ex'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  notify-success:
    runs-on: ubuntu-latest
    needs: [build-and-test, create-release, deploy-to-pages]
    if: success()
    
    steps:
    - name: Success notification
      run: |
        echo "ðŸŽ‰ Release ${{ needs.build-and-test.outputs.version }} completed successfully!"
        echo "âœ… Tests passed"
        echo "âœ… Build completed" 
        echo "âœ… Release created"
        echo "âœ… Deployed to GitHub Pages"